}
checking_list <- c()
for (id in id_list) {
if (id %in% reports1$ID) {
checking_list <- list.append(checking_list,id)
}
}
#load data
reports1 <- readxl::read_excel('./cmsappreports_december.xlsx')
reports2 <- readxl::read_excel('./cmsappreports_september.xlsx')
#remove potential duplicates
reports2 <- reports2[!duplicated(reports2[,2:10]), ]
#create an empty list to store report IDs
id_list <- c()
#create a loop to find and append to the above list all report IDs which have BE as their service item
i <- 1
while (i <= nrow(reports2)) {
y <- reports2[i,]
if (y$`Service Item` == "Brigada Eskwela") {
id_list <- list.append(id_list,y$ID)
}
i = i + 1
}
#create another empty list to check for equivalence
checking_list <- c()
for (id in id_list) {
if (id %in% reports1$ID) {
checking_list <- list.append(checking_list,id)
}
}
for (id in id_list) {
if (id %in% reports1$`Report ID`) {
checking_list <- list.append(checking_list,id)
}
}
View(reports1)
View(reports2)
for (id in id_list) {
reports1[which(reports1$`Report ID` == id),6] <- reports2[which(reports2$ID == id),5]
reports1[which(reports1$`Report ID` == id),7] <- reports2[which(reports2$ID == id),6]
reports1[which(reports1$`Report ID` == id),8] <- reports2[which(reports2$ID == id),7]
}
nrow(reports1[which(reports1$`Service Item` == "Brigada Eskwela"),])
nrow(reports2[which(reports2$`Service Item` == "Brigada Eskwela"),])
for (id in id_list) {
if (id %in% reports1$`Report ID`) {
checking_list <- list.append(checking_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
uhoh_list <- c()
for (id in id_list) {
if (id %in% reports1$`Report ID`) {
checking_list <- list.append(checking_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
#create another two empty lists to check for equivalence between IDs
checking_list <- c()
uhoh_list <- c()
for (id in id_list) {
if (id %in% reports1$`Report ID`) {
checking_list <- list.append(checking_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
print(uhoh_list)
View(reports2)
#load data
reports1 <- readxl::read_excel('./cmsappreports_december.xlsx')
reports2 <- readxl::read_excel('./cmsappreports_september.xlsx')
#remove potential duplicates
reports2 <- reports2[!duplicated(reports2[,2:10]), ]
#create an empty list to store report IDs
id_list <- c()
#create a loop to find and append to the above list all report IDs which have BE as their service item
i <- 1
while (i <= nrow(reports2)) {
y <- reports2[i,]
if (y$`Service Item` == "Brigada Eskwela") {
id_list <- list.append(id_list,y$ID)
}
i = i + 1
}
#create another two empty lists to check for equivalence between IDs
checking_list <- c()
uhoh_list <- c()
for (id in id_list) {
if (id %in% reports1$`Report ID`) {
checking_list <- list.append(checking_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
#okay, so we see here that there are only 406/435 reports with the same id. That's because how Bridge360 removed duplicates
#differs from how I removed duplicates.
#After lots of data examining, it seems that after consulting with CMS more, they decided to not differ by picture url, so they
#deleted more reports. In other words, we don't need to worry about the uhoh_list after all :)
#now, we can finally change the categories
for (id in id_list) {
reports1[which(reports1$`Report ID` == id),6] <- reports2[which(reports2$ID == id),5]
reports1[which(reports1$`Report ID` == id),7] <- reports2[which(reports2$ID == id),6]
reports1[which(reports1$`Report ID` == id),8] <- reports2[which(reports2$ID == id),7]
}
library(xlsx)
write.xlsx(reports1, "cleaned_cms_data_dec3-2019.xlsx")
reports1 <- readxl::read_excel('./cleaned_cms_data_dec3-2019.xlsx')
View(reports1)
reports1 <- readxl::read_excel('./cleaned_cms_data_dec3-2019.xlsx')
reports1 <- readxl::read_excel('./cleaned_cms_data_dec3-2019.xlsx')
reports1 <- readxl::read_excel('./cleaned_cms_data_dec3-2019.xlsx')
View(reports1)
reports1 <- readxl::read_excel('./cleaned_cms_data_dec3-2019.xlsx')
setwd("~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/Updated_App_Dashboard")
reports1 <- readxl::read_excel('./cleaned_cms_data_dec3-2019.xlsx')
View(reports1)
reports1$`Reported On` <- format(strptime(reports1$`Reported On`, format = "%Y-%m-%d %H:%M:%S"), "%Y/%m/%d %H:%M:%S")
reports1$`Reported On` <- as.Date(reports1$`Reported On`)
colnames(reports1)[colnames(reports1)=="Reported On"] <- "Date"
#change Report ID to ID
colnames(reports1)[colnames(reports1)=="Report ID"] <- "ID"
setwd("~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/Updated_App_Dashboard/fix_old_data/fix_old_data_demo")
setwd("~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/Updated_App_Dashboard/fix_old_data/fix_old_data_demo")
library(rlist)
library(xlsx)
reports1 <- readxl::read_excel('.cmsappreports_december.xlsx')
reports2 <- readxl::read_excel('.cmsappreports_september.xlsx')
#load data
reports1 <- readxl::read_excel('./cmsappreports_december.xlsx')
reports2 <- readxl::read_excel('./cmsappreports_september.xlsx')
#remove potential duplicates
reports2 <- reports2[!duplicaed(reports2[,2:10]),]
#remove potential duplicates
reports2 <- reports2[!duplicated(reports2[,2:10]),]
#create an empty list to store report IDs
id_list <- c()
i <- 1
while (i <- nrow(reports2)) {
y <- reports2[i,]
if (y$`Service Item` == "Brigada Eskwela") {
id_list <- list.append(id_list, y$ID)
}
i = i + 1
}
#create another two empty lists to check for equivalence between IDs
checking_list <- c()
uhoh_list <- c()
for (id in id_list) {
if (id %in% reports1$`Report ID`) {
checking_list <- list.append(checking_list, id)
}
else {
uhoh_list <- list.append(uhoh_list, id)
}
}
for (id in id_list) {
if (id %in% reports1$`Report ID`) {
checking_list <- list.append(checking_list, id)
}
else {
uhoh_list <- list.append(uhoh_list, id)
}
}
#create another two empty lists to check for equivalence between IDs
checking_list <- c()
uhoh_list <- c()
for (id in id_list) {
if (id %in% reports1$`Report ID`) {
checking_list <- list.append(checking_list, id)
}
else {
uhoh_list <- list.append(uhoh_list, id)
}
}
#create a loop to find and append to the above list all report IDs which have Brigada Eskwela as their service item
i <- 1
while (i <- nrow(reports2)) {
y <- reports2[i,]
if (y$`Service Item` == "Brigada Eskwela") {
id_list <- list.append(id_list, y$ID)
}
i = i + 1
}
reports1 <- readxl::read_excel('./cmsappreports_december.xlsx')
reports2 <- readxl::read_excel('./cmsappreports_september.xlsx')
#remove potential duplicates
reports2 <- reports2[!duplicated(reports2[,2:10]),]
#create an empty list to store report IDs
id_list <- c()
i <- 1
while (i <= nrow(reports2)) {
y <- reports2[i,]
if (y$`Service Item` == "Brigada Eskwela") {
id_list <- list.append(id_lsit,y$ID)
}
i = i+1
}
i <- 1
while (i <= nrow(reports2)) {
y <- reports2[i,]
if (y$`Service Item` == "Brigada Eskwela") {
id_list <- list.append(id_list,y$ID)
}
i = i+1
}
#create another two empty lists to check for equivalence between IDs
checking_list <- c()
uhoh_list <- c()
for (id in id_list) {
if (id %in% reports1$`Report ID`) {
checking_list <- list.append(checking_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
for (id in id_list) {
reports1[which(reports1$`Report ID` == id),6] <- reports2[which(reports2$ID == id), 5]
reports1[which(reports1$`Report ID` == id),7] <- reports2[which(reports2$ID == id), 6]
reports1[which(reports1$`Report ID` == id),8] <- reports2[which(reports2$ID == id), 7]
}
View(reports1)
#export the cleaned data so we can put it in the dashboard
write.xlsx(reports1, "cleaned_cms_data_dec3-2019.xlsx")
setwd("~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/Updated_App_Dashboard")
#----------reports data------------------------------------------
reports1 <- readxl::read_excel('./cleaned_cms_data_dec3-2019.xlsx')
#date is in yyyy-mm-dd format
reports1$`Reported On` <- format(strptime(reports1$`Reported On`, format = "%Y-%m-%d %H:%M:%S"), "%Y/%m/%d %H:%M:%S")
reports1$`Reported On` <- as.Date(reports1$`Reported On`)
colnames(reports1)[colnames(reports1)=="Reported On"] <- "Date"
#change Report ID to ID
colnames(reports1)[colnames(reports1)=="Report ID"] <- "ID"
View(reports1)
runApp()
class(reports1$Date)
runApp()
#----------sni and coordinate data--------------------------------
coord_data <- read.csv('./coord_data.csv')
#remove duplicates which were from different calculations of sni
coord_data <- coord_data[!duplicated(coord_data[,1]),]
#keep only schools which have reports (make sure this uses the correct regions and divisions too)
colnames(coord_data)[colnames(coord_data)=="School_Name_y"] <- "School Name"
colnames(coord_data)[colnames(coord_data)=="Region_Name"] <- "Region"
View(coord_data)
colnames(coord_data)[colnames(coord_data)=="School_ID"] <- "School ID"
coord_data <- merge(coord_data, reports1, by = c("School ID"), all = FALSE)
nrow(reports1[!duplicated(reports1[,1]), ])
nrow(coord_data[!duplicated(coord_data[,1]), ])
runApp()
setwd("~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/Updated_App_Dashboard")
class(unique(coord_data$`School ID`))
unique(coord_data$`School ID`)
id_list <- c()
id_list <- list.append(id_list, unique(coord_data$`School ID`))
class(id_list)
id_list <- as.list(id_list)
View(id_list)
id_list <- c()
id_list <- list.append(id_list, unique(reports1$`School ID`))
id_list <- as.list(id_list)
ok_list <- c()
uhoh_list <- c()
for (id in id_list) {
if (id %in% coord_data$`School ID`) {
ok_list <- list.append(ok_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
ok_list <- as.list(ok_list)
uhoh_list <- as.list(uhoh_list)
View(ok_list)
View(uhoh_list)
coord_data <- read.csv('./coord_data.csv')
coord_data <- coord_data[!duplicated(coord_data[,1]),]
#keep only schools which have reports (make sure this uses the correct regions and divisions too)
colnames(coord_data)[colnames(coord_data)=="School_Name_y"] <- "School Name"
colnames(coord_data)[colnames(coord_data)=="School_ID"] <- "School ID"
colnames(coord_data)[colnames(coord_data)=="Region_Name"] <- "Region"
ok_list <- c()
uhoh_list <- c()
for (id in unique(reports1$`School ID`)) {
if (id %in% coord_data$`School ID`) {
ok_list <- list.append(ok_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
ok_list <- as.list(ok_list)
uhoh_list <- as.list(uhoh_list)
ok_list <- c()
uhoh_list <- c()
for (id in unique(reports1$`School ID`)) {
if (id %in% coord_data$`School ID`) {
ok_list <- list.append(ok_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
ok_list <- as.list(ok_list)
uhoh_list <- as.list(uhoh_list)
for (id in unique(reports1$`School ID`)) {
if (!(id %in% coord_data$`School ID`)) {
ok_list <- list.append(ok_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
ok_list <- c()
uhoh_list <- c()
for (id in unique(reports1$`School ID`)) {
if (id %in% coord_data$`School ID`) {
ok_list <- list.append(ok_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
ok_list <- as.list(ok_list)
uhoh_list <- as.list(uhoh_list)
coord_data <- coord_data[!duplicated(coord_data[,1]),]
#keep only schools which have reports (make sure this uses the correct regions and divisions too)
colnames(coord_data)[colnames(coord_data)=="School_Name_y"] <- "School Name"
colnames(coord_data)[colnames(coord_data)=="School_ID"] <- "School ID"
colnames(coord_data)[colnames(coord_data)=="Region_Name"] <- "Region"
coord_data <- merge(coord_data, reports1, by = c("School ID"), all = FALSE)
id_list <- c()
runApp()
fsff
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/New_CMS_dashboard')
runApp()
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/New_CMS_dashboard')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#step 2: navigate to page
remDr$navigate("https://app.checkmyschool.org/admin")
#send username
username <- remDr$findElement(using = "id", value = "email")
runApp()
runApp()
runApp()
#----------reports data------------------------------------------
reports1 <- readxl::read_excel('./cleaned_cms_data_dec3-2019.xlsx')
#date is in yyyy-mm-dd format
reports1$`Reported On` <- format(strptime(reports1$`Reported On`, format = "%Y-%m-%d %H:%M:%S"), "Y%/%m/%d %H:%M:%S")
reports1$`Reported On` <- as.Date(reports1$`Reported On`)
colnames(reports1)[colnames(reports1) == "Reported On"] <- "Date"
reports1$Date <- gsub("/","-",reports1$Date)
#cange Report ID to ID
colnames(reports1)[colnames(reports1) == "Report ID"] <- "ID"
#----------reports data------------------------------------------
reports1 <- readxl::read_excel('./cleaned_cms_data_dec3-2019.xlsx')
#change Report ID to ID
colnames(reports1)[colnames(reports1) == "Report ID"] <- "ID"
#----------sni and coordinate data--------------------------------
coord_data <- read.csv('./coord_data.csv')
#remove duplicates which were from different calculations of sni
coord_data <- coord_data[!duplicated(coord_data[,1]),]
#keep only schools which have reports (make sure this uses the correct regions and divisions too)
colnames(coord_data)[colnames(coord_data)=="School_Name_y"] <- "School Name"
colnames(coord_data)[colnames(coord_data)=="School_ID"] <- "School ID"
colnames(coord_data)[colnames(coord_data)=="Region_Name"] <- "Region"
coord_data <- merge(coord_data, reports1, by = c("School ID"), all = FALSE)
ok_list <- c()
uhoh_list <- c()
for (id in unique(reports1$`School ID`)) {
if (id %in% coord_data$`School ID`) {
ok_list <- list.append(ok_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
ok_list <- as.list(ok_list)
uhoh_list <- as.list(uhoh_list)
View(uhoh_list)
runApp()
runApp()
#----------reports data------------------------------------------
reports1 <- readxl::read_excel('./cleaned_cms_data_dec3-2019.xlsx')
#----------sni and coordinate data--------------------------------
coord_data <- read.csv('./coord_data.csv')
shiny::runApp()
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
?toJSON
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp('~/William_and_Mary/GRI_StudentLeadershipCouncil/GRI_newsletter_dash')
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp()
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp()
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
runApp('~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0')
setwd("~/William_and_Mary/WM_Year2Summer2019/Philippines_GRI_Freeman_CMS/CMS/cms_app_usage_dashboard/CMS_Dashboard_v3.0")
#-------load reports data-----------------
reports1 <- readxl::read_excel('./cleaned_cms_data_dec3-2019.xlsx')
#date is in yyyy-mm-dd format
reports1$`Reported On` <- format(strptime(reports1$`Reported On`, format = "%Y-%m-%d %H:%M:%S"), "%Y/%m/%d %H:%M:%S")
reports1$`Reported On` <- as.Date(reports1$`Reported On`)
colnames(reports1)[colnames(reports1)=="Reported On"] <- "Date"
reports1$Date <- gsub("/","-",reports1$Date)
#change Report ID to ID
colnames(reports1)[colnames(reports1)=="Report ID"] <- "ID"
#-------load coordinate and sni data------------------
coord_data <- read.csv('./coord_data.csv')
coord_data <- coord_data[!duplicated(coord_data[,1]),]
#keep only schools which have reports (make sure this uses the correct regions and divisions too)
colnames(coord_data)[colnames(coord_data)=="School_Name_y"] <- "School Name"
colnames(coord_data)[colnames(coord_data)=="School_ID"] <- "School ID"
colnames(coord_data)[colnames(coord_data)=="Region_Name"] <- "Region"
#coord_data <- merge(coord_data, reports1, by = c("School Name", "Region", "Division"), all = FALSE)
#-------figure out what's happening----------------------------
coord_data <- merge(coord_data, reports1, by = c("School ID"), all = FALSE)
id_list <- c()
id_list <- list.append(id_list, unique(reports1$`School ID`))
id_list <- as.list(id_list)
ok_list <- c()
uhoh_list <- c()
for (id in unique(reports1$`School ID`)) {
if (id %in% coord_data$`School ID`) {
ok_list <- list.append(ok_list,id)
}
else {
uhoh_list <- list.append(uhoh_list,id)
}
}
ok_list <- as.list(ok_list)
uhoh_list <- as.list(uhoh_list)
View(uhoh_list)
install.packages("googledrive")
runApp()
tempfile("plot", fileext = ".pdf")
library(googledrive)
runApp()
runApp()
substr("Matt Crittenden")
substr("Matt Crittenden", start = 1)
substr("Matt Crittenden", start = 1, stop = nchar("Matt Crittenden"))
x <- "Matt Crittenden"
substr(x,1,nchar(x))
nchar(x)
as.character("Matt Crittenden")
runApp()
" " %in% "Matthew Crittenden"
" " %in% as.character("Matthew Crittenden")
"@" %in% "mcrittenden33@gmail.com"
"mcrittenden33@gmail.com" %in% "mcrittenden33@gmail.com"
grepl(" ", "Matthew Crittenden")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
